//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQPractice01.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestingDBEntities : DbContext
    {
        public TestingDBEntities()
            : base("name=TestingDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Professor> Professors { get; set; }
        public virtual DbSet<Table> Tables { get; set; }
        public virtual DbSet<TempEmp> TempEmps { get; set; }
        public virtual DbSet<TempF1Drivers> TempF1Drivers { get; set; }
        public virtual DbSet<TempStudent> TempStudents { get; set; }
    
        public virtual ObjectResult<getAllEmps_Result> getAllEmps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllEmps_Result>("getAllEmps");
        }
    
        public virtual ObjectResult<getPlayerX_Result> getPlayerX(Nullable<double> plyname)
        {
            var plynameParameter = plyname.HasValue ?
                new ObjectParameter("plyname", plyname) :
                new ObjectParameter("plyname", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPlayerX_Result>("getPlayerX", plynameParameter);
        }
    
        public virtual int sp_CalculateF1DriverAvgSpeeds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CalculateF1DriverAvgSpeeds");
        }
    
        public virtual ObjectResult<sp_GetAllEmps_Result> sp_GetAllEmps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllEmps_Result>("sp_GetAllEmps");
        }
    
        public virtual ObjectResult<sp_getEmpsSalaryGtX_Result> sp_getEmpsSalaryGtX(Nullable<int> sal)
        {
            var salParameter = sal.HasValue ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getEmpsSalaryGtX_Result>("sp_getEmpsSalaryGtX", salParameter);
        }
    
        public virtual ObjectResult<sp_GetStudentUnderXProfAndYcgpa_Result> sp_GetStudentUnderXProfAndYcgpa(string profId, Nullable<double> cGPA)
        {
            var profIdParameter = profId != null ?
                new ObjectParameter("profId", profId) :
                new ObjectParameter("profId", typeof(string));
    
            var cGPAParameter = cGPA.HasValue ?
                new ObjectParameter("CGPA", cGPA) :
                new ObjectParameter("CGPA", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStudentUnderXProfAndYcgpa_Result>("sp_GetStudentUnderXProfAndYcgpa", profIdParameter, cGPAParameter);
        }
    }
}
